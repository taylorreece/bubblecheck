"""Switch all IDs to uuid

Revision ID: 0217364e3a53
Revises: 
Create Date: 2018-07-16 21:36:15.089231

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '0217364e3a53'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('courses',
    sa.Column('id', sa.Text(), nullable=False),
    sa.Column('created', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('modified', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('name', sa.Text(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.Text(), nullable=False),
    sa.Column('created', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('modified', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('email', sa.Text(), nullable=False),
    sa.Column('teachername', sa.Text(), nullable=False),
    sa.Column('password', sa.Text(), nullable=False),
    sa.Column('is_admin', sa.Boolean(), nullable=False),
    sa.Column('public_uuid', sa.Text(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_public_uuid'), 'users', ['public_uuid'], unique=True)
    op.create_table('colleagues',
    sa.Column('id', sa.Text(), nullable=False),
    sa.Column('created', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('modified', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('colleague1', sa.Text(), nullable=True),
    sa.Column('colleague2', sa.Text(), nullable=True),
    sa.Column('accepted', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['colleague1'], ['users.id'], ),
    sa.ForeignKeyConstraint(['colleague2'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('exams',
    sa.Column('id', sa.Text(), nullable=False),
    sa.Column('created', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('modified', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('name', sa.Text(), nullable=False),
    sa.Column('courses_id', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['courses_id'], ['courses.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sections',
    sa.Column('id', sa.Text(), nullable=False),
    sa.Column('created', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('modified', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('name', sa.Text(), nullable=False),
    sa.Column('courses_id', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['courses_id'], ['courses.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users_courses_permissions',
    sa.Column('id', sa.Text(), nullable=False),
    sa.Column('created', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('modified', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('users_id', sa.Text(), nullable=True),
    sa.Column('courses_id', sa.Text(), nullable=True),
    sa.Column('permission', sa.Enum('own', 'edit', 'view', name='coursepermissionenum'), nullable=False),
    sa.ForeignKeyConstraint(['courses_id'], ['courses.id'], ),
    sa.ForeignKeyConstraint(['users_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('users_id', 'courses_id', name='unique_user_course_pair')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('users_courses_permissions')
    op.drop_table('sections')
    op.drop_table('exams')
    op.drop_table('colleagues')
    op.drop_index(op.f('ix_users_public_uuid'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_table('courses')
    # ### end Alembic commands ###
