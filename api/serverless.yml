service: bubblecheck-api

package:
  exclude:
    - node_modules/**
    - venv/**
    - package-lock
    - serverless_resources/**
    - .dockerignore
    - Dockerfile
    - ./*/__pycache__/**

plugins:
  - serverless-apigateway-service-proxy
  - serverless-domain-manager
  - serverless-python-requirements
  - serverless-wsgi

provider:
  name: aws
  runtime: python3.6
  stage: dev
  region: us-east-1
  profile: bubblecheck
  environment:
    FLASK_DEBUG: true
    COGNITO_URL: auth.bubblecheck.app
    COGNITO_CLIENT_ID:
      Ref: CognitoUserPoolClient
    COGNITO_USER_POOL_ID:
      Fn::ImportValue: cognito-auth-UserPoolId
    DYNAMO_TABLE:
      Ref: DynamoDbTable
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      # Restrict our IAM role permissions to
      # the specific table for the stage
      Resource:
        - "Fn::GetAtt": [ DynamoDbTable, Arn ]

custom:
  wsgi:
    app: app.app
    packRequirements: false
  APIURL:
    dev: dev.bubblecheck.app
    production: bubblecheck.app
  customDomain:
    domainName: ${self:provider.stage}.bubblecheck.app
    basePath: ''
    certificateName: '*.bubblecheck.app'
    stage: ${self:provider.stage}
    createRoute53Record: true
  pythonRequirements:
    dockerizePip: true
  apiGatewayServiceProxies:
    - s3:
        path: /
        method: get
        action: GetObject
        bucket:
          Ref: ReactS3Bucket
        key: index.html
        cors: true
    - s3:
        path: /{myKey}
        method: get
        action: GetObject
        bucket:
          Ref: ReactS3Bucket
        key:
          pathParam: myKey
        cors: true

resources:
  - ${file(./serverless_resources/CognitoUserPoolClient.yml)}
  - ${file(./serverless_resources/ReactS3Bucket.yml)}
  - ${file(./serverless_resources/DynamoDbTable.yml)}
  - Outputs:
      ReactS3BucketName:
        Value:
          Ref: ReactS3Bucket
        
functions:
  app:
    handler: wsgi_handler.handler
    events:
      - http: ANY /api
      - http: 'ANY /api/{proxy+}'
