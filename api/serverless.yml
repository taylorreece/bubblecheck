service: bubblecheck-api

plugins:
  - serverless-python-requirements
  - serverless-wsgi

provider:
  name: aws
  runtime: python3.6
  stage: dev
  region: us-east-1
  profile: bubblecheck
  environment:
    FLASK_DEBUG: true
    DATABASE_DRIVER: postgresql+psycopg2
    DATABASE_USER: ${self:custom.DATABASE.USER}
    DATABASE_PASSWORD: ${self:custom.DATABASE.PASS}
    DATABASE_NAME: ${self:custom.DATABASE.NAME}
    DATABASE_ENDPOINT: 
      Fn::GetAtt: [PostgresqlRDSInstance, Endpoint.Address]
    DATABASE_PORT:
      Fn::GetAtt: [PostgresqlRDSInstance, Endpoint.Port]
      
custom:
  wsgi:
    app: app.app
    packRequirements: false
  DATABASE:
    NAME: bubblecheck_db
    USER: bubblecheck_user
    PASS: bubblecheck_pass

resources:
  Resources:
   PostgresqlRDSInstance: ${file(./serverless_resources/PostgresqlRDSInstance.yml)}

functions:
  app:
    handler: wsgi_handler.handler
    events:
      - http: ANY /
      - http: 'ANY {proxy+}'

# TODO: Define a VPC and subnets for the lambda (and RDS) to live in