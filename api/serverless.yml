service: bubblecheck-api

plugins:
  - serverless-domain-manager
  - serverless-python-requirements
  - serverless-wsgi

provider:
  name: aws
  runtime: python3.6
  stage: dev
  region: us-east-1
  profile: bubblecheck
  environment:
    FLASK_DEBUG: true
    DATABASE_DRIVER: postgresql+psycopg2
    DATABASE_USER: ${self:custom.DATABASE.USER}
    DATABASE_PASSWORD: ${self:custom.DATABASE.PASS}
    DATABASE_NAME: ${self:custom.DATABASE.NAME}
    DATABASE_ENDPOINT: 
      Fn::GetAtt: [PostgresqlRDSCluster, Endpoint.Address]
    DATABASE_PORT:
      Fn::GetAtt: [PostgresqlRDSCluster, Endpoint.Port]
    COGNITO_URL: auth.bubblecheck.app
    COGNITO_CLIENT_ID:
      Ref: CognitoUserPoolClient
    COGNITO_USER_POOL_ID:
      Fn::ImportValue: cognito-auth-UserPoolId
  vpc:
    securityGroupIds:
      - Ref: LambdaSecurityGroup
    subnetIds:
      - Ref: PrivateSubnet1
      - Ref: PrivateSubnet2
      - Ref: PrivateSubnet3
      
custom:
  wsgi:
    app: app.app
    packRequirements: false
  DATABASE:
    NAME: bubblecheck_db
    USER: bubblecheck_user
    PASS: bubblecheck_pass
  RDSConfig:
    dev:
      AutoPause: true
      MinCapacity: 2
      MaxCapacity: 4
      SecondsUntilAutoPause: 600
    production:
      AutoPause: false
      MinCapacity: 2
      MaxCapacity: 32
      SecondsUntilAutoPause: 0
  APIURL:
    dev: dev.bubblecheck.app
    production: bubblecheck.app
  customDomain:
    domainName: ${self:provider.stage}.bubblecheck.app
    basePath: api
    certificateName: '*.bubblecheck.app'
    stage: ${self:provider.stage}
    createRoute53Record: true

resources:
  - ${file(./serverless_resources/CognitoUserPoolClient.yml)}
  - ${file(./serverless_resources/JumpHost.yml)}
  - ${file(./serverless_resources/Network.yml)}
  - ${file(./serverless_resources/PostgresqlRDSInstance.yml)}

functions:
  app:
    handler: wsgi_handler.handler
    events:
      - http: ANY /
      - http: 'ANY {proxy+}'
